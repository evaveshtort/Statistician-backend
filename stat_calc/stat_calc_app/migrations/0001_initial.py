# Generated by Django 5.1.1 on 2024-10-27 20:58

import stat_calc_app.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CalcMetrics",
            fields=[
                ("amount_of_data", models.IntegerField(default=1)),
                ("result", models.FloatField(blank=True, null=True)),
                ("calc_metric_id", models.AutoField(primary_key=True, serialize=False)),
                ("status", models.CharField(default="действует", max_length=50)),
            ],
            options={
                "db_table": "calc_metrics",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Calculations",
            fields=[
                ("calc_id", models.AutoField(primary_key=True, serialize=False)),
                ("status", models.CharField(default="черновик", max_length=30)),
                ("creation_date", models.DateTimeField()),
                ("formation_date", models.DateTimeField(blank=True, null=True)),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                ("data_for_calc", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "calculations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Metrics",
            fields=[
                ("metric_id", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=50)),
                (
                    "picture_url",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("description", models.TextField()),
                ("status", models.CharField(default="действует", max_length=20)),
                ("metric_code", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "metrics",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="email адрес"
                    ),
                ),
                ("password", models.CharField(max_length=50, verbose_name="Пароль")),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        verbose_name="Является ли пользователь менеджером?",
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False, verbose_name="Является ли пользователь админом?"
                    ),
                ),
                ("date_joined", models.DateTimeField(auto_now=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            managers=[
                ("objects", stat_calc_app.models.NewUserManager()),
            ],
        ),
    ]
